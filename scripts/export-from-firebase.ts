import { initializeApp } from "firebase/app";
import { getFirestore, collection, getDocs } from "firebase/firestore";
import { writeFileSync, mkdirSync, existsSync, readFileSync } from "fs";
import { join } from "path";

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
const envPath = join(process.cwd(), '.env');
if (existsSync(envPath)) {
  const envContent = readFileSync(envPath, 'utf-8');
  envContent.split('\n').forEach(line => {
    const [key, ...valueParts] = line.split('=');
    if (key && valueParts.length) {
      const value = valueParts.join('=').trim();
      process.env[key.trim()] = value;
    }
  });
  console.log('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞');
} else {
  console.warn('‚ö†Ô∏è –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω');
}

const firebaseConfig = {
  apiKey: process.env.VITE_FIREBASE_API_KEY,
  authDomain: process.env.VITE_FIREBASE_AUTH_DOMAIN || `${process.env.VITE_FIREBASE_PROJECT_ID}.firebaseapp.com`,
  projectId: process.env.VITE_FIREBASE_PROJECT_ID,
  storageBucket: process.env.VITE_FIREBASE_STORAGE_BUCKET || `${process.env.VITE_FIREBASE_PROJECT_ID}.firebasestorage.app`,
  messagingSenderId: process.env.VITE_FIREBASE_MESSAGING_SENDER_ID,
  appId: process.env.VITE_FIREBASE_APP_ID,
};

console.log('üî• –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase...');
console.log('üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:');
console.log('   API Key:', firebaseConfig.apiKey?.substring(0, 20) + '...');
console.log('   Project ID:', firebaseConfig.projectId);
console.log('   App ID:', firebaseConfig.appId?.substring(0, 20) + '...');

if (!firebaseConfig.apiKey || !firebaseConfig.projectId || !firebaseConfig.appId) {
  console.error('\n‚ùå –û—à–∏–±–∫–∞: –ù–µ –≤—Å–µ Firebase credentials –∑–∞–¥–∞–Ω—ã!');
  console.error('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ .env —Ñ–∞–π–ª –∏ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –µ—Å—Ç—å:');
  console.error('  - VITE_FIREBASE_API_KEY');
  console.error('  - VITE_FIREBASE_PROJECT_ID');
  console.error('  - VITE_FIREBASE_APP_ID');
  console.error('  - VITE_FIREBASE_MESSAGING_SENDER_ID');
  process.exit(1);
}

const app = initializeApp(firebaseConfig);
const db = getFirestore(app);

const exportDir = join(process.cwd(), 'export');
if (!existsSync(exportDir)) {
  mkdirSync(exportDir, { recursive: true });
}

async function exportCollection(collectionName: string) {
  try {
    console.log(`üì¶ –≠–∫—Å–ø–æ—Ä—Ç –∫–æ–ª–ª–µ–∫—Ü–∏–∏: ${collectionName}...`);
    const snapshot = await getDocs(collection(db, collectionName));
    
    const data = snapshot.docs.map(doc => {
      const docData = doc.data();
      
      const convertedData: any = { id: doc.id };
      
      for (const [key, value] of Object.entries(docData)) {
        if (value && typeof value === 'object' && 'toDate' in value && typeof value.toDate === 'function') {
          convertedData[key] = value.toDate().toISOString();
        } else {
          convertedData[key] = value;
        }
      }
      
      return convertedData;
    });
    
    const filePath = join(exportDir, `${collectionName}.json`);
    writeFileSync(filePath, JSON.stringify(data, null, 2));
    console.log(`‚úÖ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ ${data.length} –∑–∞–ø–∏—Å–µ–π –∏–∑ ${collectionName} ‚Üí ${filePath}`);
    
    return data.length;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ ${collectionName}:`, error);
    return 0;
  }
}

async function exportAll() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —ç–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ Firebase...\n');
  
  const collections = [
    'products',
    'categories', 
    'orders',
    'reviews',
    'promocodes',
    'carts',
    'wishlists',
    'stockNotifications',
    'pushSubscriptions'
  ];

  let totalRecords = 0;
  
  for (const col of collections) {
    const count = await exportCollection(col);
    totalRecords += count;
  }
  
  console.log(`\n‚ú® –≠–∫—Å–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω! –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: ${totalRecords}`);
  console.log(`üìÅ –§–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫–µ: ${exportDir}`);
  
  const summary = {
    exportDate: new Date().toISOString(),
    totalRecords,
    collections: collections,
    source: 'Firebase',
    destination: 'Yandex Cloud (–≥–æ—Ç–æ–≤–æ –∫ –∏–º–ø–æ—Ä—Ç—É)'
  };
  
  writeFileSync(
    join(exportDir, '_export-summary.json'),
    JSON.stringify(summary, null, 2)
  );
}

exportAll()
  .then(() => {
    console.log('\nüéâ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ Yandex Cloud.');
    process.exit(0);
  })
  .catch(error => {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
  });
