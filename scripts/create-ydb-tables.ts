import { DynamoDBClient, CreateTableCommand } from "@aws-sdk/client-dynamodb";

const client = new DynamoDBClient({
  region: "ru-central1",
  endpoint: process.env.VITE_YDB_ENDPOINT,
  credentials: {
    accessKeyId: process.env.VITE_YDB_ACCESS_KEY_ID!,
    secretAccessKey: process.env.VITE_YDB_SECRET_KEY!,
  },
});

const tables = [
  'products',
  'categories',
  'orders',
  'reviews',
  'promocodes',
  'carts',
  'wishlists',
  'stockNotifications',
  'pushSubscriptions'
];

async function createTable(tableName: string) {
  try {
    console.log(`üìã –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã: ${tableName}...`);
    
    await client.send(new CreateTableCommand({
      TableName: tableName,
      AttributeDefinitions: [
        {
          AttributeName: 'id',
          AttributeType: 'S'
        }
      ],
      KeySchema: [
        {
          AttributeName: 'id',
          KeyType: 'HASH'
        }
      ]
    }));
    
    console.log(`‚úÖ –¢–∞–±–ª–∏—Ü–∞ ${tableName} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞`);
  } catch (error: any) {
    if (error.name === 'ResourceInUseException' || error.message?.includes('already exists')) {
      console.log(`‚è≠Ô∏è  –¢–∞–±–ª–∏—Ü–∞ ${tableName} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
    } else {
      console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã ${tableName}:`, error.message);
    }
  }
}

async function createAllTables() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –≤ Yandex Database (YDB)...\n');
  console.log(`üîß Endpoint: ${process.env.VITE_YDB_ENDPOINT}\n`);
  
  if (!process.env.VITE_YDB_ENDPOINT || !process.env.VITE_YDB_ACCESS_KEY_ID || !process.env.VITE_YDB_SECRET_KEY) {
    console.error('\n‚ùå –û—à–∏–±–∫–∞: –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è YDB!');
    process.exit(1);
  }
  
  for (const table of tables) {
    await createTable(table);
  }
  
  console.log('\n‚ú® –ì–æ—Ç–æ–≤–æ! –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã.');
}

createAllTables()
  .then(() => {
    console.log('\nüéâ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥–æ–π: npm run import-to-ydb');
    process.exit(0);
  })
  .catch(error => {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
  });
