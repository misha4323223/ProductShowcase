import { initializeApp } from "firebase/app";
import { getFirestore, collection, doc, setDoc } from "firebase/firestore";
import productsData from "../client/public/data/products.json" assert { type: "json" };

const firebaseConfig = {
  apiKey: process.env.VITE_FIREBASE_API_KEY,
  authDomain: `${process.env.VITE_FIREBASE_PROJECT_ID}.firebaseapp.com`,
  projectId: process.env.VITE_FIREBASE_PROJECT_ID,
  storageBucket: `${process.env.VITE_FIREBASE_PROJECT_ID}.firebasestorage.app`,
  messagingSenderId: process.env.VITE_FIREBASE_MESSAGING_SENDER_ID,
  appId: process.env.VITE_FIREBASE_APP_ID,
};

const app = initializeApp(firebaseConfig);
const db = getFirestore(app);

async function uploadData() {
  console.log("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö –≤ Firestore...\n");

  try {
    console.log("üì¶ –ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...");
    for (const category of productsData.categories) {
      await setDoc(doc(db, "categories", category.id), category);
      console.log(`‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${category.name}`);
    }

    console.log("\nüì¶ –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤...");
    for (const product of productsData.products) {
      const productData = {
        ...product,
        featured: false,
        popularity: Math.floor(Math.random() * 100),
        createdAt: new Date(),
      };
      await setDoc(doc(db, "products", product.id), productData);
      console.log(`‚úÖ –¢–æ–≤–∞—Ä: ${product.name}`);
    }

    console.log("\nüéâ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ Firestore!");
    console.log(`\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
    console.log(`   –ö–∞—Ç–µ–≥–æ—Ä–∏–π: ${productsData.categories.length}`);
    console.log(`   –¢–æ–≤–∞—Ä–æ–≤: ${productsData.products.length}`);
    
    process.exit(0);
  } catch (error) {
    console.error("\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö:", error);
    process.exit(1);
  }
}

uploadData();
