import { useState, useEffect } from "react";
import { ChevronLeft, ChevronRight, Bell, BellOff } from "lucide-react";
import { Button } from "@/components/ui/button";
import { useToast } from "@/hooks/use-toast";
import { savePushSubscription, updatePushSubscriptionStatus } from "@/services/yandex-push-subscriptions";

interface Slide {
  id: number;
  image: string;
  title: string;
  subtitle: string;
}

interface HeroSliderProps {
  slides: Slide[];
}

export default function HeroSlider({ slides }: HeroSliderProps) {
  const [currentSlide, setCurrentSlide] = useState(0);
  const [isSubscribed, setIsSubscribed] = useState(false);
  const { toast } = useToast();

  useEffect(() => {
    const timer = setInterval(() => {
      setCurrentSlide((prev) => (prev + 1) % slides.length);
    }, 5000);
    return () => clearInterval(timer);
  }, [slides.length]);

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    const checkSubscription = async () => {
      try {
        if (window.OneSignal && typeof window.OneSignal.User !== 'undefined') {
          const isPushEnabled = await window.OneSignal.User.PushSubscription.optedIn;
          setIsSubscribed(isPushEnabled);
          console.log('üìä –°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ OneSignal:', isPushEnabled);
        }
      } catch (error) {
        console.log('OneSignal –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω, –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
      }
    };

    // –î–∞–µ–º OneSignal –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∏—Ç—å—Å—è
    setTimeout(checkSubscription, 1000);
  }, []);

  const goToSlide = (index: number) => {
    setCurrentSlide(index);
  };

  const nextSlide = () => {
    setCurrentSlide((prev) => (prev + 1) % slides.length);
  };

  const prevSlide = () => {
    setCurrentSlide((prev) => (prev - 1 + slides.length) % slides.length);
  };

  const handleSubscribe = async () => {
    console.log('üîî –ö–ª–∏–∫ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ–¥–ø–∏—Å–∫–∏/–æ—Ç–ø–∏—Å–∫–∏');

    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ OneSignal –∏ –≥–æ—Ç–æ–≤ –ª–∏ –æ–Ω –∫ —Ä–∞–±–æ—Ç–µ
      console.log('‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ OneSignal...');
      
      let attempts = 0;
      const maxAttempts = 100;
      
      while (!window.OneSignalReady && attempts < maxAttempts) {
        await new Promise(resolve => setTimeout(resolve, 100));
        attempts++;
        
        if (attempts % 10 === 0) {
          console.log(`‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ... ${attempts * 100}–º—Å`);
        }
      }

      if (!window.OneSignalReady || !window.OneSignal) {
        console.error('‚ùå OneSignal –Ω–µ –≥–æ—Ç–æ–≤ –ø–æ—Å–ª–µ', attempts * 100, '–º—Å');
        toast({
          title: "‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏",
          description: "–°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.",
          variant: "destructive",
        });
        return;
      }

      console.log('‚úÖ OneSignal –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');

      if (!window.OneSignal.User || !window.OneSignal.User.PushSubscription || !window.OneSignal.Slidedown) {
        console.error('‚ùå OneSignal API –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        toast({
          title: "‚ö†Ô∏è –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏",
          description: "–ù–µ –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã OneSignal –∑–∞–≥—Ä—É–∂–µ–Ω—ã. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.",
          variant: "destructive",
        });
        return;
      }

      console.log('‚úÖ –í—Å–µ API –¥–æ—Å—Ç—É–ø–Ω—ã, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏');
      
      const isPushEnabled = await window.OneSignal.User.PushSubscription.optedIn;
      console.log('üìä –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏:', isPushEnabled);

      if (isPushEnabled) {
        // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è
        console.log('üîï –û—Ç–ø–∏—Å—ã–≤–∞–µ–º—Å—è –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...');
        
        const subscriptionId = await window.OneSignal.User.PushSubscription.id;
        
        await window.OneSignal.User.PushSubscription.optOut();
        
        if (subscriptionId) {
          await updatePushSubscriptionStatus(subscriptionId, 'unsubscribed');
          console.log('‚úÖ –°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω –≤ Yandex Cloud');
        }
        
        setIsSubscribed(false);
        toast({
          title: "–í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å",
          description: "–í—ã –±–æ–ª—å—à–µ –Ω–µ –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è",
        });
        return;
      }

      console.log('üöÄ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–º–ø—Ç –ø–æ–¥–ø–∏—Å–∫–∏...');

      // –ö–†–ò–¢–ò–ß–ù–û: –ü—Ä–æ–≤–µ—Ä—è–µ–º browser permission –ü–ï–†–ï–î promptPush
      if (window.OneSignal.Notifications) {
        const browserPermission = window.OneSignal.Notifications.permission;
        console.log('üîê Browser permission:', browserPermission);
        
        // –ï—Å–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –±—Ä–∞—É–∑–µ—Ä–æ–º
        if (browserPermission === false) {
          console.warn('‚ö†Ô∏è –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –±—Ä–∞—É–∑–µ—Ä–µ!');
          toast({
            title: "‚ö†Ô∏è –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã",
            description: "–†–∞–∑—Ä–µ—à–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –±—Ä–∞—É–∑–µ—Ä–∞: –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–∫–æ–Ω–∫—É üîí —Å–ª–µ–≤–∞ –æ—Ç –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏",
            variant: "destructive",
            duration: 10000,
          });
          return;
        }
      }

      // –í—ã–∑—ã–≤–∞–µ–º Slidedown promptPush
      console.log('üéØ –í—ã–∑—ã–≤–∞–µ–º Slidedown.promptPush()...');
      await window.OneSignal.Slidedown.promptPush({ force: true });
      
      console.log('‚úÖ promptPush() –≤—ã–ø–æ–ª–Ω–µ–Ω');

      setTimeout(async () => {
        try {
          if (window.OneSignal && window.OneSignal.User && window.OneSignal.User.PushSubscription) {
            const isNowSubscribed = await window.OneSignal.User.PushSubscription.optedIn;
            console.log('üìä –°—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –ø—Ä–æ–º–ø—Ç–∞:', isNowSubscribed);

            if (isNowSubscribed) {
              const subscriptionId = await window.OneSignal.User.PushSubscription.id;
              const subscriptionToken = await window.OneSignal.User.PushSubscription.token;
              
              console.log('üìù ID –ø–æ–¥–ø–∏—Å–∫–∏:', subscriptionId);
              console.log('üìù –¢–æ–∫–µ–Ω –ø–æ–¥–ø–∏—Å–∫–∏:', subscriptionToken ? '–ø–æ–ª—É—á–µ–Ω' : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
              
              if (subscriptionId) {
                await savePushSubscription(subscriptionId, subscriptionToken || undefined);
                console.log('‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ Yandex Cloud');
              }
              
              setIsSubscribed(true);
              toast({
                title: "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É! üéâ",
                description: "–ú—ã —Å–æ–æ–±—â–∏–º –≤–∞–º, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –æ—Ç–∫—Ä–æ–µ–º—Å—è!",
              });
            }
          }
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏:', error);
        }
      }, 1500);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏:', error);
      toast({
        title: "‚ùå –û—à–∏–±–∫–∞",
        description: `–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`,
        variant: "destructive",
      });
    }
  };

  return (
    <div className="relative w-full h-[50vh] md:h-[70vh] overflow-hidden bg-gradient-to-br from-pink-50 to-purple-50">
      {slides.map((slide, index) => (
        <div
          key={slide.id}
          className={`absolute inset-0 transition-opacity duration-700 ${
            index === currentSlide ? 'opacity-100' : 'opacity-0'
          }`}
        >
          <img
            src={slide.image}
            alt={slide.title}
            className="w-full h-full object-cover"
          />
          <div className="absolute inset-0 bg-gradient-to-t from-black/60 via-black/20 to-transparent" />
          <div className="absolute inset-0 flex items-center justify-center">
            <div className="text-center text-white max-w-3xl px-4">
              <h1 className="font-serif text-4xl md:text-6xl font-bold mb-4 drop-shadow-2xl text-candy" data-testid={`text-slide-title-${index}`}>
                {slide.title}
              </h1>
              <p className="text-lg md:text-xl mb-8 text-white drop-shadow-lg" data-testid={`text-slide-subtitle-${index}`}>
                {slide.subtitle}
              </p>
            </div>
          </div>
        </div>
      ))}

      {/* –ï–¥–∏–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è –≤—Å–µ—Ö —Å–ª–∞–π–¥–æ–≤ */}
      <div className="absolute inset-0 flex items-center justify-center pointer-events-none z-20">
        <div className="text-center max-w-3xl px-4 mt-32 md:mt-40 pointer-events-auto">
          <Button 
            size="lg" 
            onClick={handleSubscribe}
            className="bg-gradient-to-r from-primary via-pink-500 to-accent text-white shadow-2xl hover:shadow-pink-500/50 hover:scale-105 transition-all duration-300 glossy relative overflow-hidden sprinkles text-lg px-8 py-6"
            data-testid="button-subscribe"
          >
            {isSubscribed ? (
              <>
                <BellOff className="mr-2 h-5 w-5" />
                –û—Ç–ø–∏—Å–∞—Ç—å—Å—è
              </>
            ) : (
              <>
                <Bell className="mr-2 h-5 w-5" />
                –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è
              </>
            )}
          </Button>
        </div>
      </div>

      <button
        onClick={prevSlide}
        className="absolute left-2 md:left-4 bottom-20 md:top-1/2 md:-translate-y-1/2 w-10 h-10 md:w-12 md:h-12 rounded-full bg-white/20 backdrop-blur-sm hover:bg-white/30 flex items-center justify-center text-white transition-colors z-10"
        data-testid="button-prev-slide"
      >
        <ChevronLeft className="h-5 w-5 md:h-6 md:w-6" />
      </button>

      <button
        onClick={nextSlide}
        className="absolute right-2 md:right-4 bottom-20 md:top-1/2 md:-translate-y-1/2 w-10 h-10 md:w-12 md:h-12 rounded-full bg-white/20 backdrop-blur-sm hover:bg-white/30 flex items-center justify-center text-white transition-colors z-10"
        data-testid="button-next-slide"
      >
        <ChevronRight className="h-5 w-5 md:h-6 md:w-6" />
      </button>

      <div className="absolute bottom-6 left-1/2 -translate-x-1/2 flex gap-2">
        {slides.map((_, index) => (
          <button
            key={index}
            onClick={() => goToSlide(index)}
            className={`w-2 h-2 rounded-full transition-all ${
              index === currentSlide ? 'bg-white w-8' : 'bg-white/50'
            }`}
            data-testid={`button-slide-dot-${index}`}
          />
        ))}
      </div>
    </div>
  );
}
