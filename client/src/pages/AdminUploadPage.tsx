import { useState } from "react";
import { collection, doc, setDoc } from "firebase/firestore";
import { db } from "@/lib/firebase";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Progress } from "@/components/ui/progress";
import { CheckCircle2, Upload } from "lucide-react";
import productsData from "../data/products.json";

export default function AdminUploadPage() {
  const [uploading, setUploading] = useState(false);
  const [progress, setProgress] = useState(0);
  const [done, setDone] = useState(false);
  const [error, setError] = useState<string | null>(null);

  const uploadData = async () => {
    setUploading(true);
    setError(null);
    setProgress(0);

    try {
      console.log("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö –≤ Firestore...");
      
      const totalItems = productsData.categories.length + productsData.products.length;
      let completed = 0;

      console.log("üì¶ –ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...");
      for (const category of productsData.categories) {
        console.log(`  ‚ûú –ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${category.name}`);
        await setDoc(doc(db, "categories", category.id), category);
        completed++;
        setProgress((completed / totalItems) * 100);
        console.log(`  ‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞: ${category.name}`);
      }

      console.log("üõçÔ∏è –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤...");
      for (const product of productsData.products) {
        console.log(`  ‚ûú –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–∞: ${product.name}`);
        const productData = {
          ...product,
          featured: false,
          popularity: Math.floor(Math.random() * 100),
          createdAt: new Date(),
        };
        await setDoc(doc(db, "products", product.id), productData);
        completed++;
        setProgress((completed / totalItems) * 100);
        console.log(`  ‚úÖ –¢–æ–≤–∞—Ä –∑–∞–≥—Ä—É–∂–µ–Ω: ${product.name}`);
      }

      console.log("üéâ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!");
      setDone(true);
    } catch (err: any) {
      console.error("‚ùå –û–®–ò–ë–ö–ê –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ:", err);
      console.error("–ö–æ–¥ –æ—à–∏–±–∫–∏:", err.code);
      console.error("–°–æ–æ–±—â–µ–Ω–∏–µ:", err.message);
      
      let errorMessage = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö";
      
      if (err.code === 'permission-denied') {
        errorMessage = "‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω! –ù–µ–æ–±—Ö–æ–¥–∏–º–æ:\n1. –°–æ–∑–¥–∞—Ç—å Firestore Database –≤ Firebase Console\n2. –í–∫–ª—é—á–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º (Test mode)\n3. –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞";
      } else if (err.code === 'unavailable') {
        errorMessage = "‚ùå Firebase Firestore –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:\n1. –°–æ–∑–¥–∞–Ω–∞ –ª–∏ –±–∞–∑–∞ Firestore –≤ Firebase Console\n2. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ª–∏ API –∫–ª—é—á–∏";
      } else {
        errorMessage = `‚ùå –û—à–∏–±–∫–∞: ${err.message}\n\n–ö–æ–¥: ${err.code || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`;
      }
      
      setError(errorMessage);
    } finally {
      setUploading(false);
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-pink-50 via-purple-50 to-blue-50 flex items-center justify-center p-4">
      <Card className="w-full max-w-md">
        <CardHeader>
          <CardTitle className="text-2xl">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ Firebase</CardTitle>
          <CardDescription>
            –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ç–æ–≤–∞—Ä—ã –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ JSON –≤ Firestore
          </CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          {!done && !uploading && (
            <>
              <div className="text-sm text-muted-foreground space-y-2">
                <p>üì¶ –ö–∞—Ç–µ–≥–æ—Ä–∏–π: {productsData.categories.length}</p>
                <p>üõçÔ∏è –¢–æ–≤–∞—Ä–æ–≤: {productsData.products.length}</p>
              </div>
              <Button 
                onClick={uploadData} 
                className="w-full"
                data-testid="button-upload-data"
              >
                <Upload className="h-4 w-4 mr-2" />
                –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
              </Button>
            </>
          )}

          {uploading && (
            <div className="space-y-4">
              <p className="text-sm text-muted-foreground">
                –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...
              </p>
              <Progress value={progress} />
              <p className="text-xs text-center text-muted-foreground">
                {Math.round(progress)}%
              </p>
            </div>
          )}

          {done && (
            <div className="text-center space-y-4">
              <CheckCircle2 className="h-16 w-16 mx-auto text-green-500" />
              <div>
                <p className="font-semibold text-green-700">
                  –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!
                </p>
                <p className="text-sm text-muted-foreground mt-2">
                  –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
                </p>
              </div>
              <Button 
                onClick={() => window.location.href = '/'}
                className="w-full"
                data-testid="button-go-home"
              >
                –ù–∞ –≥–ª–∞–≤–Ω—É—é
              </Button>
            </div>
          )}

          {error && (
            <div className="p-4 bg-destructive/10 border border-destructive rounded-md">
              <p className="text-sm text-destructive whitespace-pre-wrap">{error}</p>
              <div className="mt-3 text-xs text-muted-foreground">
                <p className="font-semibold mb-1">–ö–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å:</p>
                <ol className="list-decimal list-inside space-y-1">
                  <li>–û—Ç–∫—Ä–æ–π—Ç–µ Firebase Console</li>
                  <li>–°–æ–∑–¥–∞–π—Ç–µ Firestore Database</li>
                  <li>–í—ã–±–µ—Ä–∏—Ç–µ "Start in test mode"</li>
                  <li>–û–±–Ω–æ–≤–∏—Ç–µ —ç—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—É</li>
                </ol>
              </div>
            </div>
          )}
        </CardContent>
      </Card>
    </div>
  );
}
