rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAdmin() {
      return request.auth != null && request.auth.token.email == 'pimashin2015@gmail.com';
    }
    
    match /categories/{categoryId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }
    
    match /products/{productId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }
    
    match /orders/{orderId} {
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.userId || isAdmin());
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update, delete: if isAdmin();
    }
    
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow delete: if isAdmin();
      allow update: if false;
    }
    
    match /promocodes/{promoId} {
      allow read: if true;
      allow create, delete: if isAdmin();
      allow update: if isAdmin() || 
        (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['currentUses']));
    }
    
    match /carts/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /wishlists/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /stockNotifications/{notificationId} {
      allow create: if true;
      allow read, delete: if isAdmin();
      allow update: if false;
    }
  }
}
